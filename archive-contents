(1
 (ag . [(20161228 1641) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." tar])
 (alchemist . [(20170118 142) ((elixir-mode (2 2 5)) (dash (2 11 0)) (emacs (24 4)) (company (0 8 0)) (pkg-info (0 4))) "Elixir tooling integration into Emacs" tar])
 (alert . [(20170106 1020) ((gntp (0 1)) (log4e (0 3 0))) "Growl-style notification system for Emacs" tar])
 (all-the-icons . [(20161219 329) ((dash (2 12 0)) (emacs (24 3)) (font-lock+ (0))) "A library for inserting Developer icons" tar])
 (anaphora . [(20140728 1536) nil "anaphoric macros providing implicit temp variables" tar])
 (android-mode . [(20160408 523) nil "Minor mode for Android application development" tar])
 (apropospriate-theme . [(20170120 1254) nil "A colorful, low-contrast, light & dark theme set for Emacs with a fun name." tar])
 (async . [(20161103 1036) nil "Asynchronous processing in Emacs" tar])
 (auctex . [(11 90 0) nil "Integrated environment for *TeX*" tar])
 (auto-compile . [(20160711 1012) ((emacs (24 3)) (dash (2 12 1)) (packed (0 5 3))) "automatically compile Emacs Lisp libraries" tar])
 (auto-complete . [(20161029 643) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar])
 (base16-theme . [(20161227 1040) nil "Collection of themes built on combinations of 16 base colors" tar])
 (bbdb . [(20161001 2212) nil "The Insidious Big Brother Database for GNU Emacs" tar])
 (benchmark-init . [(20150905 238) nil "Benchmarks Emacs require and load calls" tar])
 (bind-key . [(20161218 1520) nil "A simple way to manage personal keybindings" tar])
 (bookmark+ . [(20170113 1310) nil "Bookmark+: extensions to standard library `bookmark.el'." tar])
 (buttercup . [(20161209 154) nil "Behavior-Driven Emacs Lisp Testing" tar])
 (camcorder . [(20160404 2134) ((emacs (24)) (names (20150000)) (cl-lib (0 5))) "Record screencasts in gif or other formats." tar])
 (cask-mode . [(20160410 749) ((emacs (24 3))) "major mode for editing Cask files" tar])
 (cider . [(20170122 2028) ((emacs (24 4)) (clojure-mode (5 6 0)) (pkg-info (0 4)) (queue (0 1 1)) (spinner (1 7)) (seq (2 16))) "Clojure Interactive Development Environment that Rocks" tar])
 (circe . [(20170107 632) ((cl-lib (0 5))) "Client for IRC in Emacs" tar])
 (clang-format . [(20170120 137) ((cl-lib (0 3))) "Format code using clang-format" tar])
 (clojure-mode . [(20170120 2239) ((emacs (24 4))) "Major mode for Clojure code" tar])
 (clojure-mode-extra-font-locking . [(20160307 414) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" tar])
 (clomacs . [(20161227 131) ((emacs (24 3)) (cider (0 11)) (s (1 10 0))) "Simplifies Emacs Lisp interaction with Clojure." tar])
 (color-identifiers-mode . [(20161019 1314) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" tar])
 (command-log-mode . [(20160412 2147) nil "log keyboard commands to buffer" tar])
 (company . [(20170112 2005) ((emacs (24 1)) (cl-lib (0 5))) "Modular text completion framework" tar])
 (company-auctex . [(20161025 24) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Companycompletion for AUCTeX" tar])
 (company-flow . [(20161111 2147) ((company (0 8 0)) (dash (2 13 0))) "Flow backend for company-mode" tar])
 (company-ghc . [(20160315 710) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "companymod backend" tar])
 (company-ghci . [(20160310 1800) ((company (0 8 11)) (haskell-mode (13))) "company backend which uses the current ghci process." tar])
 (company-irony . [(20160826 56) ((emacs (24 1)) (company (0 8 0)) (irony (0 2 0)) (cl-lib (0 5))) "companymode" tar])
 (company-shell . [(20161128 953) ((company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for shell functions" tar])
 (company-tern . [(20161004 1147) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" tar])
 (company-web . [(20160502 658) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar])
 (concurrent . [(20161228 1930) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" tar])
 (conkeror-minor-mode . [(20150114 804) nil "Mode for editing conkeror javascript files." tar])
 (csharp-mode . [(20170111 1133) nil "C# mode derived mode" tar])
 (ctable . [(20140304 1659) nil "Table component for Emacs Lisp" tar])
 (dash . [(20161121 55) nil "A modern list library for Emacs" tar])
 (dash-functional . [(20160615 1351) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" tar])
 (deferred . [(20161228 1930) ((emacs (24 3))) "Simple asynchronous functions for emacs lisp" tar])
 (desktop+ . [(20170107 1332) ((emacs (24 4)) (dash (2 11 0)) (f (0 17 2))) "Handle special buffers when saving & restoring sessions" tar])
 (diminish . [(20151215 915) nil "Diminished modes are minor modes with no modeline display" tar])
 (docker . [(20170114 440) ((emacs (24 4)) (dash (2 12 1)) (docker-tramp (0 1)) (magit-popup (2 6 0)) (s (1 11 0)) (tablist (0 70)) (json-mode (1 7 0))) "Emacs interface to Docker" tar])
 (docker-tramp . [(20161020 2220) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar])
 (dockerfile-mode . [(20161209 631) nil "Major mode for editing Docker's Dockerfiles" tar])
 (dumb-jump . [(20161218 110) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." tar])
 (eclim . [(20170116 1335) ((dash (2 11 0)) (json (1 2)) (popup (0 5 2)) (s (1 9 0)) (cl-lib (0 5)) (yasnippet (0 10 0))) "An interface to the Eclipse IDE." tar])
 (ein . [(20170119 927) ((websocket (1 5)) (request (0 2)) (cl-generic (0 2))) "Emacs IPython Notebook" tar])
 (elixir-mode . [(20170102 942) ((emacs (24)) (pkg-info (0 4))) "Major mode for editing Elixir files" tar])
 (elixir-yasnippets . [(20150417 539) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar])
 (elm-mode . [(20161210 49) ((f (0 17)) (let-alist (1 0 4)) (s (1 7 0)) (emacs (24))) "Major mode for Elm" tar])
 (elpa-mirror . [(20160917 10) nil "Create local package repository" tar])
 (elpy . [(20161229 1103) ((company (0 8 2)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 10 0))) "Emacs Python Development Environment" tar])
 (emacsshot . [(20161018 743) nil "Snapshot a frame or window from within Emacs" tar])
 (emamux . [(20161123 414) ((emacs (24 3))) "Interact with tmux" tar])
 (emmet-mode . [(20161113 2158) nil "Unofficial Emmet's support for emacs" tar])
 (emms . [(20161222 1446) nil "The Emacs Multimedia System" tar])
 (emojify . [(20161124 940) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar])
 (emr . [(20170109 1526) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (redshank (1 0 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0)) (iedit (0 97))) "Emacs refactoring system." tar])
 (engine-mode . [(20161104 650) nil "Define and query search engines from within Emacs." tar])
 (enh-ruby-mode . [(20160817 1711) nil "Major mode for editing Ruby files" tar])
 (epc . [(20140609 2234) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar])
 (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" tar])
 (eslint-fix . [(20160819 36) nil "Fix JavaScript files using ESLint" tar])
 (esxml . [(20160703 1417) nil "Library for working with xml via esxml and sxml" tar])
 (evalator . [(20160212 1728) ((helm-core (1 9 1))) "Package for interactive transformation of data with helm" tar])
 (exec-path-from-shell . [(20161229 1338) nil "Get environment variables such as $PATH from the shell" tar])
 (expand-region . [(20170122 2241) nil "Increase selected region by semantic units." tar])
 (f . [(20161002 800) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar])
 (figlet . [(20160218 1437) nil "Annoy people with big, ascii art text" tar])
 (find-file-in-project . [(20161202 2205) ((ivy (0 7 0)) (emacs (24 3))) "Find files in a project quickly, on any OS" tar])
 (fireplace . [(20160811 519) nil "A cozy fireplace for emacs" tar])
 (flx . [(20151030 1112) ((cl-lib (0 3))) "fuzzy matching with good sorting" tar])
 (flycheck . [(20170117 1430) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (flycheck-clojure . [(20161231 836) ((cider (0 8 1)) (flycheck (0 22 -3 1)) (let-alist (1 0 1)) (emacs (24))) "Flycheck: Clojure support" tar])
 (flycheck-elixir . [(20160629 59) ((flycheck (0 25))) "Support Elixir in flycheck" tar])
 (flycheck-haskell . [(20160524 117) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar])
 (flycheck-irony . [(20160317 1536) ((emacs (24 1)) (flycheck (0 22)) (irony (0 2 0))) "Flycheck: C/C++ support via Irony" tar])
 (flycheck-mix . [(20170118 630) ((flycheck (27)) (elixir-mode (1 8 0))) "Elixir mix flycheck integration" tar])
 (flycheck-package . [(20161111 1451) ((flycheck (0 22)) (package-lint (0 2))) "A Flycheck checker for elisp package authors" tar])
 (flycheck-pos-tip . [(20161112 912) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" tar])
 (flycheck-stack . [(20160520 244) ((flycheck (26)) (haskell-mode (13))) "Flychecker using stack ghci" tar])
 (flycheck-status-emoji . [(20160813 2038) ((cl-lib (0 1)) (emacs (24)) (flycheck (0 20)) (let-alist (1 0))) "Show flycheck status using cute, compact emoji" tar])
 (focus . [(20161113 1145) ((emacs (24)) (cl-lib (0 5))) "Dim the font color of text in surrounding sections" tar])
 (font-lock+ . [(20170101 947) nil "Enhancements to standard library `font-lock.el'." tar])
 (font-utils . [(20150806 1051) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" tar])
 (fsm . [(0 2 1) ((emacs (24 1)) (cl-lib (0 5))) "state machine library" single])
 (geiser . [(20170116 1834) nil "GNU Emacs and Scheme talk to each other" tar])
 (ggtags . [(20161022 251) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single])
 (gh . [(20161119 2004) ((emacs (24 3)) (s (1 9 0)) (dash (2 9 0)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar])
 (ghc . [(20160808 813) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar])
 (gist . [(20161127 855) ((emacs (24 1)) (gh (0 9 2))) "Emacs integration for gist.github.com" tar])
 (git-commit . [(20170112 334) ((emacs (24 4)) (dash (20161121 55)) (with-editor (20161231 826))) "Edit Git commit messages" tar])
 (git-gutter . [(20161105 656) ((emacs (24 3))) "Port of Sublime Text plugin GitGutter" tar])
 (git-timemachine . [(20161125 142) ((emacs (24 3))) "Walk through git revisions of a file" tar])
 (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" tar])
 (golden-ratio . [(20150819 420) nil "Automatic resizing of Emacs windows to the golden ratio" tar])
 (haml-mode . [(20170104 2224) ((ruby-mode (1 0))) "Major mode for editing Haml files" tar])
 (haskell-mode . [(20170116 407) ((emacs (24 3))) "A Haskell editing mode" tar])
 (haskell-snippets . [(20160918 1722) ((cl-lib (0 5)) (yasnippet (0 8 0))) "Yasnippets for Haskell" tar])
 (header2 . [(20170101 954) nil "Support for creation and update of file headers." tar])
 (helm . [(20170119 158) ((emacs (24 4)) (async (1 9)) (popup (0 5 3)) (helm-core (2 5 0))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-ag . [(20161203 523) ((emacs (24 4)) (helm (2 0))) "the silver searcher with helm interface" tar])
 (helm-core . [(20170122 250) ((emacs (24 4)) (async (1 9))) "Development files for Helm" tar])
 (helm-descbinds . [(20160916 713) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" tar])
 (helm-describe-modes . [(20160211 2118) ((helm (1 9)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface to major and minor modes." tar])
 (helm-flx . [(20170110 957) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" tar])
 (helm-hoogle . [(20161026 2234) ((helm (1 6 2)) (emacs (24 4))) "Use helm to navigate query results from Hoogle" tar])
 (helm-projectile . [(20170113 209) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" tar])
 (helm-smex . [(20161202 1252) ((emacs (24)) (smex (3 0)) (helm (1 7 7))) "Helm interface for smex" tar])
 (helm-swoop . [(20160619 953) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" tar])
 (highlight-indentation . [(20161012 209) nil "Minor modes for highlighting indentation" tar])
 (hindent . [(20160905 243) ((cl-lib (0 5))) "Indent haskell code using the hindent program" tar])
 (ht . [(20161015 1945) ((dash (2 12 0))) "The missing hash table library for Emacs" tar])
 (hungry-delete . [(20161128 2238) nil "hungry delete minor mode" tar])
 (hydra . [(20170108 148) ((cl-lib (0 5))) "Make bindings that stick around." tar])
 (iedit . [(20161228 2111) nil "Edit multiple regions in the same way simultaneously." tar])
 (inf-ruby . [(20170115 1602) nil "Run a Ruby process in a buffer" tar])
 (irony . [(20161227 348) ((cl-lib (0 5)) (json (1 2))) "C/C++ minor mode powered by libclang" tar])
 (ivy . [(20170109 626) ((emacs (24 1))) "Incremental Vertical completYon" tar])
 (jabber . [(20170106 1603) ((fsm (0 2))) "A Jabber client for Emacs." tar])
 (jedi . [(20160425 2156) ((emacs (24)) (jedi-core (0 2 2)) (auto-complete (1 4))) "a Python auto-completion for Emacs" tar])
 (jedi-core . [(20170121 610) ((emacs (24)) (epc (0 1 0)) (python-environment (0 0 2)) (cl-lib (0 5))) "Common code of jedi.el and company-jedi.el" tar])
 (js-doc . [(20160714 2134) nil "Insert JsDoc style comment easily" tar])
 (js2-mode . [(20170116 733) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(20161102 1108) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (jsfmt . [(20150727 1525) nil "Interface to jsfmt command for javascript files" tar])
 (json-mode . [(20160803 1606) ((emacs (25 1))) "Major mode for editing JSON files" single])
 (json-reformat . [(20160212 53) nil "Reformatting tool for JSON" tar])
 (json-snatcher . [(20150511 2047) ((emacs (24))) "Grabs the path to JSON values in a JSON file" tar])
 (keyfreq . [(20160516 716) ((cl-lib (0 5))) "track command frequencies" tar])
 (langtool . [(20160116 1654) ((cl-lib (0 3))) "Grammar check utility using LanguageTool" tar])
 (latex-preview-pane . [(20151023 1303) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar])
 (ledger-mode . [(20161231 914) nil "Helper code for use with the ledger command-line tool" tar])
 (list-processes+ . [(20131117 1135) nil "Add process management to `list-processes'" tar])
 (list-utils . [(20160414 702) nil "List-manipulation utility functions" tar])
 (log4e . [(20150105 505) nil "provide logging framework for elisp" tar])
 (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" tar])
 (magit . [(20170119 1803) ((emacs (24 4)) (async (20161103 1036)) (dash (20161121 55)) (with-editor (20161231 826)) (git-commit (20161227 125)) (magit-popup (20170104 557))) "A Git porcelain inside Emacs" tar])
 (magit-popup . [(20170104 924) ((emacs (24 4)) (async (20161103 1036)) (dash (20161121 55))) "Define prefixsuffix command combos" tar])
 (magit-svn . [(20170118 925) ((emacs (24 4)) (magit (2 1 0))) "Git-Svn extension for Magit" tar])
 (magithub . [(20170115 1723) ((emacs (24 4)) (magit (2 8 0)) (git-commit (20160821 1338)) (with-editor (20160828 1025)) (s (20160711 525))) "Magit interfaces for GitHub" tar])
 (marshal . [(20160807 1954) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" tar])
 (material-theme . [(20160908 1538) ((emacs (24 1))) "A Theme based on the colors of the Google Material Design" tar])
 (meghanada . [(20170121 302) ((emacs (24 3)) (cl-lib (0 5)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar])
 (memory-usage . [(0 2) nil "Analyze the memory usage of Emacs in various ways" single])
 (multi-term . [(20160619 233) nil "Managing multiple terminal buffers in Emacs." tar])
 (multiple-cursors . [(20161021 1431) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (names . [(20151201 404) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar])
 (nodejs-repl . [(20170110 940) nil "Run Node.js REPL" tar])
 (npm-mode . [(20160706 1129) ((emacs (24 1))) "minor mode for working with npm projects" tar])
 (oauth2 . [(0 11) nil "OAuth 2.0 Authorization Protocol" single])
 (omnisharp . [(20160920 2343) ((json (1 2)) (flycheck (0 25 1)) (dash (20141201 2206)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 9 0))) "Omnicompletion (intellisense) and more for C#" tar])
 (org . [(20161224) nil "Outline-based notes management and organizer" tar])
 (org-journal . [(20170104 648) nil "a simple org-mode based journaling mode" tar])
 (org-plus-contrib . [(20161224) nil "Outline-based notes management and organizer" tar])
 (overseer . [(20160517 2343) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4)) (f (0 18 1))) "Ert-runner Integration Into Emacs" tar])
 (ox-reveal . [(20161027 226) ((org (20150330))) "reveal.js Presentation Back-End for Org Export Engine" tar])
 (package-lint . [(20161124 1615) ((cl-lib (0 5)) (emacs (24))) "A linting library for elisp package authors" tar])
 (packed . [(20160523 600) ((emacs (24 3)) (dash (2 12 1))) "package manager agnostic Emacs Lisp package utilities" tar])
 (paradox . [(20161117 502) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar])
 (paredit . [(20160615 1325) nil "minor mode for editing parentheses" tar])
 (paredit-everywhere . [(20150821 2144) ((paredit (22))) "Enable some paredit features in non-lisp buffers" tar])
 (pcache . [(20170105 1414) ((eieio (1 3))) "persistent caching for Emacs." tar])
 (pcmpl-git . [(20170120 1659) nil "pcomplete for git" tar])
 (pcmpl-pip . [(20141024 148) nil "pcomplete for pip" tar])
 (pcomplete-extension . [(20140604 947) ((emacs (24)) (cl-lib (0 5))) "additional completion for pcomplete" tar])
 (persistent-soft . [(20150223 1053) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" tar])
 (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" tar])
 (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" tar])
 (pos-tip . [(20150318 813) nil "Show tooltip at point" tar])
 (prodigy . [(20160929 2302) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" tar])
 (projectile . [(20170106 606) ((pkg-info (0 4))) "Manage and navigate projects in Emacs easily" tar])
 (py-autopep8 . [(20160925 352) nil "Use autopep8 to beautify a Python buffer" tar])
 (python-environment . [(20150310 153) ((deferred (0 3 1))) "virtualenv API for Emacs Lisp" tar])
 (pyvenv . [(20160527 442) nil "Python virtual environment interface" tar])
 (queue . [(0 1 1) nil "Queue data structure" single])
 (rainbow-delimiters . [(20160430 2358) nil "Highlight brackets according to their depth" tar])
 (react-snippets . [(20160712 1521) ((yasnippet (0 7 0))) "Yasnippets for React" tar])
 (recentf-ext . [(20161210 840) nil "Recentf extensions" tar])
 (redshank . [(20120510 1230) nil "No description available." tar])
 (request . [(20170120 414) ((emacs (24)) (cl-lib (0 5))) "Compatible layer for URL request in Emacs" tar])
 (restclient . [(20160801 707) nil "An interactive HTTP client for Emacs" tar])
 (robe . [(20160926 656) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (rvm . [(20150402 742) nil "Emacs integration for rvm" tar])
 (s . [(20160928 636) nil "The long lost Emacs string manipulation library." tar])
 (sass-mode . [(20161006 2326) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" tar])
 (sauron . [(20160501 1045) nil "Track (erc/org/dbus/...) events and react to them." tar])
 (scratch . [(20120830 1105) nil "Mode-specific scratch buffers" tar])
 (scratch-ext . [(20140103 2116) nil "Extensions for *scratch*" tar])
 (seq . [(2 19) nil "Sequence manipulation functions" tar])
 (shm . [(20170119 135) nil "Structured Haskell Mode" tar])
 (simple-httpd . [(20160902 1800) ((cl-lib (0 3))) "pure elisp HTTP server" tar])
 (skewer-mode . [(20170122 938) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (slack . [(20170111 732) ((websocket (1 5)) (request (0 2 0)) (oauth2 (0 10)) (circe (2 2)) (alert (1 2)) (emojify (0 2))) "Slack client for Emacs" tar])
 (smartparens . [(20170104 410) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smex . [(20151212 1409) ((emacs (24))) "Mstyle fuzzy matching." tar])
 (spinner . [(1 7 3) nil "Add spinners and progressline for ongoing operations" single])
 (tablist . [(20160424 235) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (tern . [(20161222 850) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" tar])
 (tronesque-theme . [(20150125 241) nil "Color Theme based on Tron universe." tar])
 (twittering-mode . [(20160921 1038) nil "Major mode for Twitter" tar])
 (ucs-utils . [(20150826 714) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar])
 (undo-tree . [(20161012 701) nil "Treat undo history as a tree" single])
 (unicode-fonts . [(20150826 1532) ((font-utils (0 7 8)) (ucs-utils (0 8 2)) (list-utils (0 4 2)) (persistent-soft (0 8 10)) (pcache (0 3 1))) "Configure Unicode fonts" tar])
 (use-package . [(20170116 1309) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" tar])
 (virtualenv . [(20140220 1501) nil "Virtualenv for Python" tar])
 (virtualenvwrapper . [(20161002 1515) ((dash (1 5 0)) (s (1 6 1))) "a featureful virtualenv tool for Emacs" tar])
 (w3m . [(20170110 453) nil "an Emacs interface to w3m" tar])
 (web-beautify . [(20161115 1447) nil "Format HTML, CSS and JavaScript/JSON" tar])
 (web-completion-data . [(20160318 148) nil "Shared completion data for acweb" tar])
 (web-mode . [(20170118 1211) nil "major mode for editing web templates" tar])
 (websocket . [(20161113 1736) nil "Emacs WebSocket client and server" tar])
 (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" tar])
 (wgrep-helm . [(20140528 1427) ((wgrep (2 1 1))) "Writable helmmode buffer and apply the changes to files" tar])
 (which-key . [(20161222 1221) ((emacs (24 3))) "Display available keybindings in popup" tar])
 (window-layout . [(20150716 2207) nil "window layout manager" tar])
 (window-numbering . [(20160809 1110) nil "Numbered window shortcuts" tar])
 (with-editor . [(20170111 609) ((emacs (24 4)) (async (1 9)) (dash (2 13 0))) "Use the Emacsclient as $EDITOR" tar])
 (wordgen . [(20161104 944) ((emacs (24)) (cl-lib (0 5))) "Random word generator" tar])
 (workgroups2 . [(20141102 1122) ((cl-lib (0 4)) (dash (2 8 0)) (anaphora (1 0 0)) (f (0 17))) "New workspaces for Emacs" tar])
 (ws-butler . [(20170111 1534) nil "Unobtrusively remove trailing whitespace." tar])
 (yaml-mode . [(20161105 814) ((emacs (24 1))) "Major mode for editing YAML files" tar])
 (yasnippet . [(20170108 1830) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar])
 (zone-nyan . [(20161014 154) ((esxml (0 3 1))) "Zone out with nyan cat" tar])
 (zone-sl . [(20160201 410) ((emacs (24 3))) "Zone out with steam locomotives." tar])
)