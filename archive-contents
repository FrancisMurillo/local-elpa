(1
 (ace-link . [(20160925 1210) ((avy (0 2 0))) "Quickly follow links" single])
 (ace-window . [(20161018 1624) ((avy (0 2 0))) "Quickly switch windows." single])
 (ag . [(20161021 2133) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." single])
 (airline-themes . [(20161024 1051) ((powerline (2 3))) "vim-airline themes for emacs powerline" tar])
 (alchemist . [(20161002 2144) ((elixir-mode (2 2 5)) (dash (2 11 0)) (emacs (24 4)) (company (0 8 0)) (pkg-info (0 4))) "Elixir tooling integration into Emacs" tar])
 (alert . [(20160824 821) ((gntp (0 1)) (log4e (0 3 0))) "Growl-style notification system for Emacs" single])
 (all-the-icons . [(20161007 132) ((dash (2 12 0)) (emacs (24 3)) (font-lock+ (0))) "A library for inserting Developer icons" tar])
 (anaphora . [(20140728 1536) nil "anaphoric macros providing implicit temp variables" single])
 (android-mode . [(20160408 523) nil "Minor mode for Android application development" single])
 (apropospriate-theme . [(20160724 1010) nil "A colorful, low-contrast, light & dark theme set for Emacs with a fun name." tar])
 (async . [(20161010 2322) nil "Asynchronous processing in Emacs" tar])
 (auctex . [(11 89 6) nil "Integrated environment for *TeX*" tar])
 (aurel . [(20161023 122) ((emacs (24 3)) (bui (1 0)) (dash (2 11 0))) "Search, get info, vote for and download AUR packages" single])
 (auto-compile . [(20160711 1012) ((emacs (24 3)) (dash (2 12 1)) (packed (0 5 3))) "automatically compile Emacs Lisp libraries" single])
 (auto-complete . [(20160827 649) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar])
 (avy . [(20160814 250) ((emacs (24 1)) (cl-lib (0 5))) "tree-based completion" single])
 (base16-theme . [(20161012 1122) nil "Collection of themes built on combinations of 16 base colors" tar])
 (bbdb . [(20161001 2212) nil "The Insidious Big Brother Database for GNU Emacs" tar])
 (bind-key . [(20160227 48) nil "A simple way to manage personal keybindings" single])
 (bui . [(20161023 113) ((emacs (24 3)) (dash (2 11 0))) "Buffer interface library" tar])
 (buttercup . [(20160514 34) nil "Behavior-Driven Emacs Lisp Testing" tar])
 (camcorder . [(20160404 2134) ((emacs (24)) (names (20150000)) (cl-lib (0 5))) "Record screencasts in gif or other formats." single])
 (cask . [(20161024 1205) ((s (1 8 0)) (dash (2 2 0)) (f (0 16 0)) (epl (0 5)) (shut-up (0 1 0)) (cl-lib (0 3)) (package-build (0 1))) "Cask: Project management for Emacs package development" tar])
 (cask-mode . [(20160410 749) ((emacs (24 3))) "major mode for editing Cask files" single])
 (cider . [(20161016 424) ((emacs (24 3)) (clojure-mode (5 5 2)) (pkg-info (0 4)) (queue (0 1 1)) (spinner (1 7)) (seq (2 16))) "Clojure Interactive Development Environment that Rocks" tar])
 (circe . [(20161023 1346) ((cl-lib (0 5))) "Client for IRC in Emacs" tar])
 (cl-generic . [(0 3) nil "Forward cl-generic compatibility for Emacs<25" single])
 (clang-format . [(20161004 253) ((cl-lib (0 3))) "Format code using clang-format" single])
 (clojure-mode . [(20161017 1134) ((emacs (24 3))) "Major mode for Clojure code" single])
 (clojure-mode-extra-font-locking . [(20160307 414) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" single])
 (clomacs . [(20160920 42) ((emacs (24 3)) (cider (0 11))) "Simplifies Emacs Lisp interaction with Clojure." single])
 (color-identifiers-mode . [(20161019 1314) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" single])
 (color-theme-approximate . [(20140227 2036) nil "Makes Emacs theme works on terminal transparently" single])
 (colorsarenice-theme . [(20150421 1336) ((emacs (24))) "A colorful color theme." tar])
 (column-marker . [(20121128 43) nil "Highlight certain character columns" single])
 (command-log-mode . [(20160412 2147) nil "log keyboard commands to buffer" single])
 (company . [(20160829 1206) ((emacs (24 1)) (cl-lib (0 5))) "Modular text completion framework" tar])
 (company-auctex . [(20161025 24) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Companycompletion for AUCTeX" single])
 (company-flow . [(20160915 2229) ((company (0 8 0)) (dash (2 13 0))) "Flow backend for company-mode" single])
 (company-ghc . [(20160315 710) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "companymod backend" single])
 (company-ghci . [(20160310 1800) ((company (0 8 11)) (haskell-mode (13))) "company backend which uses the current ghci process." single])
 (company-jedi . [(20151216 1921) ((emacs (24)) (cl-lib (0 5)) (company (0 8 11)) (jedi-core (0 2 7))) "companyend for Python JEDI" single])
 (company-tern . [(20161004 1147) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" single])
 (company-web . [(20160502 658) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar])
 (concurrent . [(20160109 2046) ((deferred (0 4 0))) "Concurrent utility functions for emacs lisp" single])
 (conkeror-minor-mode . [(20150114 804) nil "Mode for editing conkeror javascript files." single])
 (contrast-color . [(20160903 1107) ((emacs (24 3)) (cl-lib (0 5))) "Pick best contrast color for you" single])
 (counsel . [(20161020 2248) ((emacs (24 3)) (swiper (0 8 0))) "Various completion functions using Ivy" single])
 (csharp-mode . [(20160909 1316) nil "C# mode derived mode" single])
 (ctable . [(20140304 1659) nil "Table component for Emacs Lisp" single])
 (dash . [(20161018 136) nil "A modern list library for Emacs" single])
 (dash-functional . [(20160615 1351) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single])
 (deferred . [(20160109 2046) nil "Simple asynchronous functions for emacs lisp" single])
 (diminish . [(20151215 915) nil "Diminished modes are minor modes with no modeline display" single])
 (dired-icon . [(20161024 1533) ((emacs (24 3))) "A minor mode to display a list of associated icons in dired buffers." tar])
 (docker . [(20161018 2349) ((emacs (24 4)) (dash (2 12 1)) (docker-tramp (0 1)) (magit-popup (2 6 0)) (s (1 11 0)) (tablist (0 70)) (json-mode (1 7 0))) "Emacs interface to Docker" tar])
 (docker-tramp . [(20161020 2220) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar])
 (dockerfile-mode . [(20160128 951) nil "Major mode for editing Docker's Dockerfiles" single])
 (doom-themes . [(20161009 1630) ((emacs (24 4)) (dash (2 12 0)) (all-the-icons (1 0 0))) "a pack of themes inspired by Atom One" tar])
 (dumb-jump . [(20161015 1230) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." single])
 (ein . [(20161021 1010) ((websocket (1 5)) (request (0 2)) (cl-generic (0 2))) "Emacs IPython Notebook" tar])
 (elang . [(20160104 656) ((names (20151201 404))) "A Python-like language for the Emacs VM" tar])
 (elein . [(20120120 316) nil "running leiningen commands from emacs" single])
 (elfeed . [(20161021 1247) ((emacs (24 3))) "an Emacs Atom/RSS feed reader" tar])
 (elixir-mode . [(20161015 1200) ((emacs (24)) (pkg-info (0 4))) "Major mode for editing Elixir files" tar])
 (elixir-yasnippets . [(20150417 539) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar])
 (elm-mode . [(20161026 222) ((f (0 17)) (let-alist (1 0 4)) (s (1 7 0)) (emacs (24))) "Major mode for Elm" tar])
 (elm-yasnippets . [(20160331 2224) ((yasnippet (0 8 0))) "Yasnippets for Elm" tar])
 (elpa-mirror . [(20160917 10) nil "Create local package repository" single])
 (elpy . [(20161008 910) ((company (0 8 2)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0))) "Emacs Python Development Environment" tar])
 (emacsshot . [(20161018 743) nil "Snapshot a frame or window from within Emacs" tar])
 (emamux . [(20160602 653) ((emacs (24)) (cl-lib (0 5))) "Interact with tmux" single])
 (emmet-mode . [(20160906 1919) nil "Unofficial Emmet's support for emacs" single])
 (emms . [(20160801 1349) nil "The Emacs Multimedia System" tar])
 (emojify . [(20160928 550) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar])
 (emr . [(20160613 1430) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (redshank (1 0 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0)) (iedit (0 97))) "Emacs refactoring system." tar])
 (engine-mode . [(20161009 1718) nil "Define and query search engines from within Emacs." single])
 (enh-ruby-mode . [(20160817 1711) nil "Major mode for editing Ruby files" tar])
 (epc . [(20140609 2234) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar])
 (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" single])
 (eslint-fix . [(20160819 36) nil "Fix JavaScript files using ESLint" single])
 (esxml . [(20160703 1417) nil "Library for working with xml via esxml and sxml" single])
 (exec-path-from-shell . [(20160812 159) nil "Get environment variables such as $PATH from the shell" single])
 (expand-region . [(20161020 1412) nil "Increase selected region by semantic units." tar])
 (f . [(20161002 800) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single])
 (f3 . [(20160628 1601) ((emacs (24)) (helm (1 9 6)) (cl-lib (0 5))) "The Fantastic File Finder: a helm interface for searching files really fast" tar])
 (figlet . [(20160218 1437) nil "Annoy people with big, ascii art text" single])
 (fill-column-indicator . [(20151030 1233) nil "Graphically indicate the fill column" single])
 (find-file-in-project . [(20161026 145) ((ivy (0 7 0)) (emacs (24 3))) "Find files in a project quickly, on any OS" single])
 (fireplace . [(20160811 519) nil "A cozy fireplace for emacs" single])
 (flappymacs . [(20140715 901) nil "flappybird clone for emacs" single])
 (flx . [(20151030 1112) ((cl-lib (0 3))) "fuzzy matching with good sorting" single])
 (flycheck . [(20161025 551) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (flycheck-elixir . [(20160629 59) ((flycheck (0 25))) "Support Elixir in flycheck" single])
 (flycheck-elm . [(20160717 257) ((flycheck (0 29 -3)) (emacs (24 4))) "Flycheck support for the elm language" single])
 (flycheck-flow . [(20160905 50) ((flycheck (0 18))) "Support Flow in flycheck" single])
 (flycheck-haskell . [(20160524 117) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar])
 (flycheck-ledger . [(20140605 1146) ((flycheck (0 15))) "Flycheck integration for ledger files" single])
 (flycheck-mix . [(20160803 140) ((flycheck (27)) (elixir-mode (1 8 0))) "Elixir mix flycheck integration" single])
 (flycheck-package . [(20161015 1803) ((flycheck (0 22)) (package-lint (0 2))) "A Flycheck checker for elisp package authors" single])
 (flycheck-pos-tip . [(20160323 129) ((dash (2 12)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" single])
 (flycheck-status-emoji . [(20160813 2038) ((cl-lib (0 1)) (emacs (24)) (flycheck (0 20)) (let-alist (1 0))) "Show flycheck status using cute, compact emoji" single])
 (font-lock+ . [(20151231 1319) nil "Enhancements to standard library `font-lock.el'." single])
 (font-utils . [(20150806 1051) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single])
 (free-keys . [(20160726 1350) ((cl-lib (0 3))) "Show free keybindings for modkeys or prefixes" single])
 (fringe-helper . [(20140620 1409) nil "helper functions for fringe bitmaps" single])
 (fsm . [(0 2 1) ((emacs (24 1)) (cl-lib (0 5))) "state machine library" single])
 (geiser . [(20161010 1358) nil "GNU Emacs and Scheme talk to each other" tar])
 (ggtags . [(20161022 251) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single])
 (gh . [(20160728 1525) ((emacs (24 3)) (s (1 9 0)) (dash (2 9 0)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar])
 (ghc . [(20160808 813) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar])
 (gist . [(20160118 1656) ((emacs (24 1)) (gh (0 9 2))) "Emacs integration for gist.github.com" single])
 (git-commit . [(20161011 1738) ((emacs (24 4)) (dash (20160820 501)) (with-editor (20160929 734))) "Edit Git commit messages" single])
 (git-gutter . [(20160903 852) ((cl-lib (0 5)) (emacs (24))) "Port of Sublime Text plugin GitGutter" single])
 (git-timemachine . [(20160607 1228) ((emacs (24 3))) "Walk through git revisions of a file" single])
 (github-clone . [(20160622 2010) ((gh (0 7 2)) (magit (2 1 0)) (emacs (24 4))) "Fork and clone github repos" single])
 (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" single])
 (golden-ratio . [(20150819 420) nil "Automatic resizing of Emacs windows to the golden ratio" single])
 (groovy-mode . [(20161015 114) nil "Major mode for Groovy source files" tar])
 (haml-mode . [(20150508 2011) ((ruby-mode (1 0))) "Major mode for editing Haml files" single])
 (haskell-emacs . [(20160904 1326) nil "Write emacs extensions in haskell" tar])
 (haskell-mode . [(20161026 310) ((emacs (24 3))) "A Haskell editing mode" tar])
 (haskell-snippets . [(20160918 1722) ((cl-lib (0 5)) (yasnippet (0 8 0))) "Yasnippets for Haskell" tar])
 (header2 . [(20160810 1234) nil "Support for creation and update of file headers." single])
 (helm . [(20161025 727) ((emacs (24 4)) (async (1 9)) (popup (0 5 3)) (helm-core (2 3 1))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-ag . [(20161025 809) ((emacs (24 4)) (helm (2 0))) "the silver searcher with helm interface" single])
 (helm-core . [(20161026 26) ((emacs (24 4)) (async (1 9))) "Development files for Helm" tar])
 (helm-descbinds . [(20160916 713) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" single])
 (helm-describe-modes . [(20160211 2118) ((helm (1 9)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface to major and minor modes." single])
 (helm-flx . [(20160227 1652) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" single])
 (helm-fuzzier . [(20160605 1445) ((emacs (24 3)) (helm (1 7 0))) "Better fuzzy matching for Helm" single])
 (helm-projectile . [(20161008 45) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" single])
 (helm-smex . [(20160530 1236) ((emacs (24)) (smex (3 0)) (helm (1 7 7))) "Helm interface for smex" single])
 (helm-swoop . [(20160619 953) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" single])
 (highlight-indentation . [(20161012 209) nil "Minor modes for highlighting indentation" single])
 (hindent . [(20160905 243) ((cl-lib (0 5))) "Indent haskell code using the hindent program" single])
 (ht . [(20161015 1945) ((dash (2 12 0))) "The missing hash table library for Emacs" single])
 (hungry-delete . [(20151203 1314) nil "hungry delete minor mode" single])
 (hydra . [(20160913 216) ((cl-lib (0 5))) "Make bindings that stick around." tar])
 (iedit . [(20160927 1726) nil "Edit multiple regions in the same way simultaneously." tar])
 (inf-ruby . [(20161019 1425) nil "Run a Ruby process in a buffer" single])
 (ivy . [(20161025 2304) ((emacs (24 1))) "Incremental Vertical completYon" tar])
 (jabber . [(20160124 552) ((fsm (0 2))) "A Jabber client for Emacs." tar])
 (jdee . [(20161022 612) ((emacs (24 3))) "Java Development Environment for Emacs" tar])
 (jedi . [(20160425 2156) ((emacs (24)) (jedi-core (0 2 2)) (auto-complete (1 4))) "a Python auto-completion for Emacs" single])
 (jedi-core . [(20160709 722) ((emacs (24)) (epc (0 1 0)) (python-environment (0 0 2)) (cl-lib (0 5))) "Common code of jedi.el and company-jedi.el" tar])
 (jekyll-modes . [(20141117 514) ((polymode (0 2))) "Major modes (markdown and HTML) for authoring Jekyll content" single])
 (js-doc . [(20160714 2134) nil "Insert JsDoc style comment easily" single])
 (js2-mode . [(20161025 1012) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(20161025 649) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (jsfmt . [(20150727 1525) nil "Interface to jsfmt command for javascript files" single])
 (json-mode . [(20160803 1606) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files" single])
 (json-reformat . [(20160212 53) nil "Reformatting tool for JSON" single])
 (json-snatcher . [(20150511 2047) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single])
 (keyfreq . [(20160516 716) ((cl-lib (0 5))) "track command frequencies" single])
 (latex-preview-pane . [(20151023 1303) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar])
 (ledger-mode . [(20161003 916) nil "Helper code for use with the ledger command-line tool" tar])
 (let-alist . [(1 0 4) ((emacs (24 1))) "Easily letlist by their names" single])
 (lispy . [(20161019 2038) ((emacs (24 1)) (ace-window (0 9 0)) (iedit (0 9 9)) (swiper (0 7 0)) (hydra (0 13 4)) (zoutline (0 1 0))) "vi-like Paredit" tar])
 (list-utils . [(20160414 702) nil "List-manipulation utility functions" single])
 (log4e . [(20150105 505) nil "provide logging framework for elisp" single])
 (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" single])
 (magit . [(20161025 1836) ((emacs (24 4)) (async (20160711 223)) (dash (20160820 501)) (with-editor (20160929 734)) (git-commit (20160929 801)) (magit-popup (20160821 1338))) "A Git porcelain inside Emacs" tar])
 (magit-popup . [(20161009 1506) ((emacs (24 4)) (async (20160711 223)) (dash (20160820 501))) "Define prefixsuffix command combos" tar])
 (magit-svn . [(20151219 547) ((emacs (24 4)) (magit (2 1 0))) "Git-Svn extension for Magit" single])
 (magithub . [(20161024 1527) ((emacs (24 4)) (magit (2 8 0)) (git-commit (20160821 1338)) (with-editor (20160828 1025)) (s (20160711 525))) "Magit interfaces for GitHub" tar])
 (main-line . [(20151120 1806) ((cl-lib (0 5))) "modeline replacement forked from an early version of powerline.el" single])
 (malabar-mode . [(20161002 1455) ((fringe-helper (1 0 1)) (groovy-mode (0))) "JVM Integration mode for EMACS" tar])
 (markdown-mode . [(20160928 932) ((emacs (24)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single])
 (marshal . [(20160807 1954) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" single])
 (material-theme . [(20160908 1538) ((emacs (24 1))) "A Theme based on the colors of the Google Material Design" tar])
 (memory-usage . [(0 2) nil "Analyze the memory usage of Emacs in various ways" single])
 (micgoline . [(20160414 2026) ((emacs (24 3)) (powerline (2 3))) "powerline mode, color schemes from microsoft and google's logo." single])
 (multiple-cursors . [(20161021 1431) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (names . [(20151201 404) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar])
 (nodejs-repl . [(20151229 603) nil "Run Node.js REPL" single])
 (npm-mode . [(20160706 1129) ((emacs (24 1))) "minor mode for working with npm projects" single])
 (nyan-mode . [(20160429 1323) nil "Nyan Cat shows position in current buffer in mode-line." tar])
 (oauth2 . [(0 11) nil "OAuth 2.0 Authorization Protocol" single])
 (ocodo-svg-modelines . [(20150516 719) ((svg-mode-line-themes (0))) "A collection of beautiful SVG modelines" tar])
 (octicons . [(20151031 2040) ((cl-lib (0 5))) "octicons utility" tar])
 (omnisharp . [(20160920 2343) ((json (1 2)) (flycheck (0 25 1)) (dash (20141201 2206)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 9 0))) "Omnicompletion (intellisense) and more for C#" tar])
 (org . [(20161024) nil "Outline-based notes management and organizer" tar])
 (org-journal . [(20161024 46) nil "a simple org-mode based journaling mode" single])
 (org-plus-contrib . [(20161024) nil "Outline-based notes management and organizer" tar])
 (overseer . [(20160517 2343) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4)) (f (0 18 1))) "Ert-runner Integration Into Emacs" single])
 (ox-reveal . [(20160719 28) ((org (20150330))) "reveal.js Presentation Back-End for Org Export Engine" single])
 (package-build . [(20161014 2251) ((cl-lib (0 5))) "Tools for assembling a package archive" single])
 (package-lint . [(20161024 443) ((cl-lib (0 5)) (emacs (24))) "A linting library for elisp package authors" single])
 (packed . [(20160523 600) ((emacs (24 3)) (dash (2 12 1))) "package manager agnostic Emacs Lisp package utilities" single])
 (pacmacs . [(20160131 32) ((emacs (24 4)) (dash (2 11 0)) (dash-functional (1 2 0)) (cl-lib (0 5)) (f (0 18 0))) "Pacman for Emacs" tar])
 (paradox . [(20161020 1842) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 4)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar])
 (paredit . [(20160615 1325) nil "minor mode for editing parentheses" single])
 (paredit-everywhere . [(20150821 2144) ((paredit (22))) "Enable some paredit features in non-lisp buffers" single])
 (pcache . [(20160724 1929) ((eieio (1 3))) "persistent caching for Emacs." single])
 (pcmpl-git . [(20160110 2255) nil "pcomplete for git" tar])
 (pcmpl-pip . [(20141024 148) nil "pcomplete for pip" single])
 (pcomplete-extension . [(20140604 947) ((emacs (24)) (cl-lib (0 5))) "additional completion for pcomplete" single])
 (persistent-soft . [(20150223 1053) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single])
 (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" single])
 (podcaster . [(20161020 835) ((cl-lib (0 5))) "Podcast client" single])
 (polymode . [(20160805 448) ((emacs (24))) "Versatile multiple modes with extensive literate programming support" tar])
 (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single])
 (pos-tip . [(20150318 813) nil "Show tooltip at point" single])
 (powerline . [(20160702 1931) ((cl-lib (0 2))) "Rewrite of Powerline" tar])
 (prodigy . [(20160929 2302) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single])
 (projectile . [(20161008 47) ((pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single])
 (py-autopep8 . [(20160925 352) nil "Use autopep8 to beautify a Python buffer" single])
 (python-environment . [(20150310 153) ((deferred (0 3 1))) "virtualenv API for Emacs Lisp" tar])
 (pyvenv . [(20160527 442) nil "Python virtual environment interface" single])
 (queue . [(0 1 1) nil "Queue data structure" single])
 (rainbow-delimiters . [(20160430 2358) nil "Highlight brackets according to their depth" single])
 (rainbow-mode . [(0 12) nil "Colorize color names in buffers" single])
 (react-snippets . [(20160712 1521) ((yasnippet (0 7 0))) "Yasnippets for React" tar])
 (redshank . [(20120510 1230) nil "No description available." tar])
 (request . [(20160822 1659) ((emacs (24)) (cl-lib (0 5))) "Compatible layer for URL request in Emacs" single])
 (rich-minority . [(20160725 1255) ((cl-lib (0 5))) "Cleanmodes." single])
 (robe . [(20160926 656) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (rvm . [(20150402 742) nil "Emacs integration for rvm" single])
 (s . [(20160928 636) nil "The long lost Emacs string manipulation library." single])
 (sass-mode . [(20161006 2326) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" single])
 (screenshot . [(20120509 405) nil "Take a screenshot in Emacs" single])
 (seq . [(2 16) nil "Sequence manipulation functions" tar])
 (shm . [(20160615 31) nil "Structured Haskell Mode" tar])
 (shut-up . [(20150423 522) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single])
 (simple-httpd . [(20160902 1800) ((cl-lib (0 3))) "pure elisp HTTP server" single])
 (skewer-mode . [(20150914 1304) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (slack . [(20161025 1912) ((websocket (1 5)) (request (0 2 0)) (oauth2 (0 10)) (circe (2 2)) (alert (1 2)) (emojify (0 2))) "Slack client for Emacs" tar])
 (smart-mode-line . [(20160818 508) ((emacs (24 3)) (rich-minority (0 1 1))) "A color coded smart mode-line." tar])
 (smart-mode-line-powerline-theme . [(20160705 1738) ((emacs (24 3)) (powerline (2 2)) (smart-mode-line (2 5))) "smartline theme that mimics the powerline appearance." tar])
 (smartparens . [(20161025 1043) ((dash (2 12 1)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smex . [(20151212 1409) ((emacs (24))) "Mstyle fuzzy matching." single])
 (spaceline . [(20161018 1249) ((emacs (24 3)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar])
 (spinner . [(1 7 1) nil "Add spinners and progressline for ongoing operations" single])
 (svg-mode-line-themes . [(20150425 1306) ((xmlgen (0 4))) "SVGline" tar])
 (swiper . [(20161011 747) ((emacs (24 1)) (ivy (0 8 0))) "Isearch with an overview. Oh, man!" single])
 (sx . [(20160125 1601) ((emacs (24 1)) (cl-lib (0 5)) (json (1 3)) (markdown-mode (2 0)) (let-alist (1 0 3))) "StackExchange client. Ask and answer questions on Stack Overflow, Super User, and the likes" tar])
 (tablist . [(20160424 235) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (telephone-line . [(20160302 1515) ((emacs (24 4)) (cl-lib (0 5)) (cl-generic (0 2)) (seq (1 8))) "Rewrite of Powerline" tar])
 (tern . [(20160817 522) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single])
 (tronesque-theme . [(20150125 241) nil "Color Theme based on Tron universe." single])
 (twittering-mode . [(20160921 1038) nil "Major mode for Twitter" single])
 (ucs-utils . [(20150826 714) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar])
 (undo-tree . [(20161012 701) nil "Treat undo history as a tree" single])
 (unicode-fonts . [(20150826 1532) ((font-utils (0 7 8)) (ucs-utils (0 8 2)) (list-utils (0 4 2)) (persistent-soft (0 8 10)) (pcache (0 3 1))) "Configure Unicode fonts" single])
 (use-package . [(20161017 1640) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" single])
 (virtualenv . [(20140220 1501) nil "Virtualenv for Python" single])
 (virtualenvwrapper . [(20161002 1515) ((dash (1 5 0)) (s (1 6 1))) "a featureful virtualenv tool for Emacs" single])
 (web-beautify . [(20160410 1005) nil "Format HTML, CSS and JavaScript/JSON by js-beautify" single])
 (web-completion-data . [(20160318 148) nil "Shared completion data for acweb" tar])
 (web-mode . [(20161023 1219) nil "major mode for editing web templates" single])
 (websocket . [(20161022 2054) nil "Emacs WebSocket client and server" single])
 (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" single])
 (wgrep-helm . [(20140528 1427) ((wgrep (2 1 1))) "Writable helmmode buffer and apply the changes to files" single])
 (which-key . [(20161005 1154) ((emacs (24 3))) "Display available keybindings in popup" single])
 (window-numbering . [(20160809 1110) nil "Numbered window shortcuts" single])
 (with-editor . [(20161009 917) ((emacs (24 4)) (async (1 9)) (dash (2 13 0))) "Use the Emacsclient as $EDITOR" tar])
 (workgroups2 . [(20141102 1122) ((cl-lib (0 4)) (dash (2 8 0)) (anaphora (1 0 0)) (f (0 17))) "New workspaces for Emacs" single])
 (xkcd . [(20160419 430) ((json (1 3))) "View xkcd from Emacs" single])
 (xmlgen . [(20160810 331) nil "A DSL for generating XML." single])
 (yahoo-weather . [(20160703 2008) ((emacs (24))) "Displays weather information in mode-line" single])
 (yasnippet . [(20161022 646) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar])
 (zone-nyan . [(20161014 154) ((esxml (0 3 1))) "Zone out with nyan cat" single])
 (zone-rainbow . [(20160120 534) ((emacs (24 3))) "Zone out with rainbow." single])
 (zone-sl . [(20160201 410) ((emacs (24 3))) "Zone out with steam locomotives." single])
 (zoutline . [(20160915 503) nil "Simple outline library." single])
 (sauron . [(20160501 1045) nil "Track (erc/org/dbus/...) events and react to them." tar])
)
